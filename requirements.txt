# HAVEN Frontend - Python 3.12 Compatible Requirements
# Streamlit application with original pandas stack for Python 3.12
# Last updated: August 2025

# ============================================================================
# CORE STREAMLIT FRAMEWORK (Python 3.12 Ready)
# ============================================================================
streamlit==1.37.1
streamlit-authenticator==0.3.3

# ============================================================================
# HTTP CLIENT (Python 3.12 Ready)
# ============================================================================
requests==2.32.3
httpx==0.27.2

# ============================================================================
# AUTHENTICATION & SECURITY (Python 3.12 Ready)
# ============================================================================
PyJWT==2.9.0
cryptography==43.0.1
google-auth==2.34.0
google-auth-oauthlib==1.2.1

# ============================================================================
# DATA PROCESSING (Python 3.12 Fully Supported)
# ============================================================================
pandas==2.2.3  # Full Python 3.12 support since 2.2.0
numpy==1.26.4   # Stable Python 3.12 support

# ============================================================================
# IMAGE PROCESSING (Python 3.12 Ready)
# ============================================================================
pillow==10.4.0

# ============================================================================
# DATE/TIME UTILITIES (Python 3.12 Ready)
# ============================================================================
python-dateutil==2.9.0

# ============================================================================
# ENVIRONMENT CONFIGURATION (Python 3.12 Ready)
# ============================================================================
python-dotenv==1.0.1

# ============================================================================
# VALIDATION (Python 3.12 Ready)
# ============================================================================
email-validator==2.2.0

# ============================================================================
# UTILITIES (Python 3.12 Ready)
# ============================================================================
python-slugify==8.0.4

# ============================================================================
# CHARTS & VISUALIZATION (Python 3.12 Ready)
# ============================================================================
plotly==5.23.0
altair==5.4.1

# ============================================================================
# FILE HANDLING (Python 3.12 Ready)
# ============================================================================
aiofiles==24.1.0

# ============================================================================
# CACHING (Python 3.12 Ready)
# ============================================================================
streamlit-cache==0.1.3

# ============================================================================
# UI COMPONENTS (Python 3.12 Ready)
# ============================================================================
streamlit-option-menu==0.3.13
streamlit-elements==0.1.0
streamlit-aggrid==1.0.5

# ============================================================================
# BASIC NLP (Python 3.12 Ready)
# ============================================================================
nltk==3.9.1

# ============================================================================
# JSON PROCESSING (Python 3.12 Ready)
# ============================================================================
orjson==3.10.7

# ============================================================================
# DEVELOPMENT (Optional, Python 3.12 Ready)
# ============================================================================
watchdog==4.0.2

# ============================================================================
# NOTES FOR DEPLOYMENT
# ============================================================================
# 1. This requirements file maintains the original HAVEN frontend stack
# 2. pandas is fully supported in Python 3.12 - no migration needed
# 3. All visualization libraries work seamlessly with pandas DataFrames
# 4. Original data processing code works without changes
# 5. Set PYTHON_VERSION=3.12.7 in environment variables

# ============================================================================
# STREAMLIT CONFIGURATION
# ============================================================================
# Environment Variables:
# PYTHON_VERSION=3.12.7
# BACKEND_URL=https://haven-backend.onrender.com
# ENVIRONMENT=production

# Build Command:
# pip install --upgrade pip && pip cache purge && pip install --force-reinstall -r requirements.txt && mkdir -p nltk_data && python -c "import nltk; nltk.data.path.append('./nltk_data'); nltk.download('punkt', download_dir='./nltk_data')"

# Start Command:
# export NLTK_DATA=./nltk_data && streamlit run app.py --server.port $PORT --server.address 0.0.0.0 --server.headless true --server.enableCORS false --server.enableXsrfProtection false

# ============================================================================
# BENEFITS OF KEEPING PANDAS
# ============================================================================
# - No code migration needed (existing pandas code works)
# - Familiar DataFrame operations for data display
# - Seamless integration with plotly and altair
# - Mature ecosystem with extensive documentation
# - Team familiarity with pandas syntax and patterns

# ============================================================================
# DATA PROCESSING EXAMPLES (No Changes Needed)
# ============================================================================
# Your existing pandas code works as-is:
# 
# import pandas as pd
# import streamlit as st
# 
# # Load and display campaign data
# df = pd.DataFrame(campaign_data)
# st.dataframe(df)
# 
# # Create charts
# fig = px.bar(df, x='category', y='amount_raised')
# st.plotly_chart(fig)
# 
# # Data aggregation
# summary = df.groupby('category')['amount_raised'].sum()
# st.bar_chart(summary)

# ============================================================================
# TESTING RECOMMENDATIONS
# ============================================================================
# 1. Test all data visualization components
# 2. Verify pandas DataFrame operations work correctly
# 3. Test chart generation with plotly and altair
# 4. Validate file upload/download functionality
# 5. Test all UI components and interactions

